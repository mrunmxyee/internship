{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ac02beab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-11-09</td>\n",
       "      <td>510.149994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-11-10</td>\n",
       "      <td>490.899994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-11-11</td>\n",
       "      <td>506.049988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-11-12</td>\n",
       "      <td>509.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-11-13</td>\n",
       "      <td>508.450012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>1036.599976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>1051.949951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>1044.199951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>1039.900024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>1028.349976</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>495 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date        Close\n",
       "0    2020-11-09   510.149994\n",
       "1    2020-11-10   490.899994\n",
       "2    2020-11-11   506.049988\n",
       "3    2020-11-12   509.250000\n",
       "4    2020-11-13   508.450012\n",
       "..          ...          ...\n",
       "490  2022-11-01  1036.599976\n",
       "491  2022-11-02  1051.949951\n",
       "492  2022-11-03  1044.199951\n",
       "493  2022-11-04  1039.900024\n",
       "494  2022-11-07  1028.349976\n",
       "\n",
       "[495 rows x 2 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "d=pd.read_csv('SUNPHARMA.NS (1).csv')\n",
    "df = d[['Date','Close']]\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "781dd009",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-11-09</td>\n",
       "      <td>510.149994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-11-10</td>\n",
       "      <td>490.899994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-11-11</td>\n",
       "      <td>506.049988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-11-12</td>\n",
       "      <td>509.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-11-13</td>\n",
       "      <td>508.450012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>1036.599976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>1051.949951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>1044.199951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>1039.900024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>1028.349976</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>495 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date        Close\n",
       "0   2020-11-09   510.149994\n",
       "1   2020-11-10   490.899994\n",
       "2   2020-11-11   506.049988\n",
       "3   2020-11-12   509.250000\n",
       "4   2020-11-13   508.450012\n",
       "..         ...          ...\n",
       "490 2022-11-01  1036.599976\n",
       "491 2022-11-02  1051.949951\n",
       "492 2022-11-03  1044.199951\n",
       "493 2022-11-04  1039.900024\n",
       "494 2022-11-07  1028.349976\n",
       "\n",
       "[495 rows x 2 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'], format='%Y-%m')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "35742ccf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-11-09</td>\n",
       "      <td>510.149994</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-11-10</td>\n",
       "      <td>490.899994</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-11-11</td>\n",
       "      <td>506.049988</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-11-12</td>\n",
       "      <td>509.250000</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-11-13</td>\n",
       "      <td>508.450012</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>1036.599976</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>1051.949951</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>1044.199951</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>1039.900024</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>1028.349976</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>495 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date        Close Month\n",
       "0   2020-11-09   510.149994   Nov\n",
       "1   2020-11-10   490.899994   Nov\n",
       "2   2020-11-11   506.049988   Nov\n",
       "3   2020-11-12   509.250000   Nov\n",
       "4   2020-11-13   508.450012   Nov\n",
       "..         ...          ...   ...\n",
       "490 2022-11-01  1036.599976   Nov\n",
       "491 2022-11-02  1051.949951   Nov\n",
       "492 2022-11-03  1044.199951   Nov\n",
       "493 2022-11-04  1039.900024   Nov\n",
       "494 2022-11-07  1028.349976   Nov\n",
       "\n",
       "[495 rows x 3 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Month']=df['Date'].dt.strftime('%b')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "222450c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-09</th>\n",
       "      <td>510.149994</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-11-10</th>\n",
       "      <td>490.899994</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-11-11</th>\n",
       "      <td>506.049988</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-11-12</th>\n",
       "      <td>509.250000</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-11-13</th>\n",
       "      <td>508.450012</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-01</th>\n",
       "      <td>1036.599976</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-02</th>\n",
       "      <td>1051.949951</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-03</th>\n",
       "      <td>1044.199951</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-04</th>\n",
       "      <td>1039.900024</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-07</th>\n",
       "      <td>1028.349976</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>495 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Close Month\n",
       "Date                         \n",
       "2020-11-09   510.149994   Nov\n",
       "2020-11-10   490.899994   Nov\n",
       "2020-11-11   506.049988   Nov\n",
       "2020-11-12   509.250000   Nov\n",
       "2020-11-13   508.450012   Nov\n",
       "...                 ...   ...\n",
       "2022-11-01  1036.599976   Nov\n",
       "2022-11-02  1051.949951   Nov\n",
       "2022-11-03  1044.199951   Nov\n",
       "2022-11-04  1039.900024   Nov\n",
       "2022-11-07  1028.349976   Nov\n",
       "\n",
       "[495 rows x 2 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.set_index(['Date'])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b99adce1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Close']=df['Close'].round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b3badee5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>Feb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-04-30</th>\n",
       "      <td>654.45</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-05-31</th>\n",
       "      <td>708.10</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-30</th>\n",
       "      <td>681.30</td>\n",
       "      <td>Jun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-07-31</th>\n",
       "      <td>773.95</td>\n",
       "      <td>Jul</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-31</th>\n",
       "      <td>794.80</td>\n",
       "      <td>Aug</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>818.25</td>\n",
       "      <td>Sep</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-31</th>\n",
       "      <td>842.55</td>\n",
       "      <td>Oct</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-30</th>\n",
       "      <td>815.40</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-31</th>\n",
       "      <td>845.70</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>865.50</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>894.30</td>\n",
       "      <td>Feb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>920.60</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>944.10</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>923.40</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>865.10</td>\n",
       "      <td>Jun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>943.20</td>\n",
       "      <td>Jul</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>921.05</td>\n",
       "      <td>Aug</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>948.65</td>\n",
       "      <td>Sep</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>1016.90</td>\n",
       "      <td>Oct</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>1051.95</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Close Month\n",
       "Date                     \n",
       "2020-11-30   520.15   Nov\n",
       "2020-12-31   592.35   Dec\n",
       "2021-01-31   621.00   Jan\n",
       "2021-02-28   643.65   Feb\n",
       "2021-03-31   626.00   Mar\n",
       "2021-04-30   654.45   Apr\n",
       "2021-05-31   708.10   May\n",
       "2021-06-30   681.30   Jun\n",
       "2021-07-31   773.95   Jul\n",
       "2021-08-31   794.80   Aug\n",
       "2021-09-30   818.25   Sep\n",
       "2021-10-31   842.55   Oct\n",
       "2021-11-30   815.40   Nov\n",
       "2021-12-31   845.70   Dec\n",
       "2022-01-31   865.50   Jan\n",
       "2022-02-28   894.30   Feb\n",
       "2022-03-31   920.60   Mar\n",
       "2022-04-30   944.10   Apr\n",
       "2022-05-31   923.40   May\n",
       "2022-06-30   865.10   Jun\n",
       "2022-07-31   943.20   Jul\n",
       "2022-08-31   921.05   Aug\n",
       "2022-09-30   948.65   Sep\n",
       "2022-10-31  1016.90   Oct\n",
       "2022-11-30  1051.95   Nov"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = df.resample(\"M\").max()\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9ac8d4a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data.resample(\"M\").mean().plot(style=\"-o\", figsize=(10, 5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "131f5914",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.insert(1, 't', range(1, 1 + len(data)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b28870cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>t</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>1</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>2</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>3</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>4</td>\n",
       "      <td>Feb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>5</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-04-30</th>\n",
       "      <td>654.45</td>\n",
       "      <td>6</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-05-31</th>\n",
       "      <td>708.10</td>\n",
       "      <td>7</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-30</th>\n",
       "      <td>681.30</td>\n",
       "      <td>8</td>\n",
       "      <td>Jun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-07-31</th>\n",
       "      <td>773.95</td>\n",
       "      <td>9</td>\n",
       "      <td>Jul</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-31</th>\n",
       "      <td>794.80</td>\n",
       "      <td>10</td>\n",
       "      <td>Aug</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>818.25</td>\n",
       "      <td>11</td>\n",
       "      <td>Sep</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-31</th>\n",
       "      <td>842.55</td>\n",
       "      <td>12</td>\n",
       "      <td>Oct</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-30</th>\n",
       "      <td>815.40</td>\n",
       "      <td>13</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-31</th>\n",
       "      <td>845.70</td>\n",
       "      <td>14</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>865.50</td>\n",
       "      <td>15</td>\n",
       "      <td>Jan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>894.30</td>\n",
       "      <td>16</td>\n",
       "      <td>Feb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>920.60</td>\n",
       "      <td>17</td>\n",
       "      <td>Mar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>944.10</td>\n",
       "      <td>18</td>\n",
       "      <td>Apr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>923.40</td>\n",
       "      <td>19</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>865.10</td>\n",
       "      <td>20</td>\n",
       "      <td>Jun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>943.20</td>\n",
       "      <td>21</td>\n",
       "      <td>Jul</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>921.05</td>\n",
       "      <td>22</td>\n",
       "      <td>Aug</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>948.65</td>\n",
       "      <td>23</td>\n",
       "      <td>Sep</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>1016.90</td>\n",
       "      <td>24</td>\n",
       "      <td>Oct</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>1051.95</td>\n",
       "      <td>25</td>\n",
       "      <td>Nov</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Close   t Month\n",
       "Date                         \n",
       "2020-11-30   520.15   1   Nov\n",
       "2020-12-31   592.35   2   Dec\n",
       "2021-01-31   621.00   3   Jan\n",
       "2021-02-28   643.65   4   Feb\n",
       "2021-03-31   626.00   5   Mar\n",
       "2021-04-30   654.45   6   Apr\n",
       "2021-05-31   708.10   7   May\n",
       "2021-06-30   681.30   8   Jun\n",
       "2021-07-31   773.95   9   Jul\n",
       "2021-08-31   794.80  10   Aug\n",
       "2021-09-30   818.25  11   Sep\n",
       "2021-10-31   842.55  12   Oct\n",
       "2021-11-30   815.40  13   Nov\n",
       "2021-12-31   845.70  14   Dec\n",
       "2022-01-31   865.50  15   Jan\n",
       "2022-02-28   894.30  16   Feb\n",
       "2022-03-31   920.60  17   Mar\n",
       "2022-04-30   944.10  18   Apr\n",
       "2022-05-31   923.40  19   May\n",
       "2022-06-30   865.10  20   Jun\n",
       "2022-07-31   943.20  21   Jul\n",
       "2022-08-31   921.05  22   Aug\n",
       "2022-09-30   948.65  23   Sep\n",
       "2022-10-31  1016.90  24   Oct\n",
       "2022-11-30  1051.95  25   Nov"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c067e35c",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['t_square']=data['t']**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6bc49381",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>t</th>\n",
       "      <th>Month</th>\n",
       "      <th>t_square</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>1</td>\n",
       "      <td>Nov</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>2</td>\n",
       "      <td>Dec</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>3</td>\n",
       "      <td>Jan</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>4</td>\n",
       "      <td>Feb</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>5</td>\n",
       "      <td>Mar</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-04-30</th>\n",
       "      <td>654.45</td>\n",
       "      <td>6</td>\n",
       "      <td>Apr</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-05-31</th>\n",
       "      <td>708.10</td>\n",
       "      <td>7</td>\n",
       "      <td>May</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-30</th>\n",
       "      <td>681.30</td>\n",
       "      <td>8</td>\n",
       "      <td>Jun</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-07-31</th>\n",
       "      <td>773.95</td>\n",
       "      <td>9</td>\n",
       "      <td>Jul</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-31</th>\n",
       "      <td>794.80</td>\n",
       "      <td>10</td>\n",
       "      <td>Aug</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>818.25</td>\n",
       "      <td>11</td>\n",
       "      <td>Sep</td>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-31</th>\n",
       "      <td>842.55</td>\n",
       "      <td>12</td>\n",
       "      <td>Oct</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-30</th>\n",
       "      <td>815.40</td>\n",
       "      <td>13</td>\n",
       "      <td>Nov</td>\n",
       "      <td>169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-31</th>\n",
       "      <td>845.70</td>\n",
       "      <td>14</td>\n",
       "      <td>Dec</td>\n",
       "      <td>196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>865.50</td>\n",
       "      <td>15</td>\n",
       "      <td>Jan</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>894.30</td>\n",
       "      <td>16</td>\n",
       "      <td>Feb</td>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>920.60</td>\n",
       "      <td>17</td>\n",
       "      <td>Mar</td>\n",
       "      <td>289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>944.10</td>\n",
       "      <td>18</td>\n",
       "      <td>Apr</td>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>923.40</td>\n",
       "      <td>19</td>\n",
       "      <td>May</td>\n",
       "      <td>361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>865.10</td>\n",
       "      <td>20</td>\n",
       "      <td>Jun</td>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>943.20</td>\n",
       "      <td>21</td>\n",
       "      <td>Jul</td>\n",
       "      <td>441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>921.05</td>\n",
       "      <td>22</td>\n",
       "      <td>Aug</td>\n",
       "      <td>484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>948.65</td>\n",
       "      <td>23</td>\n",
       "      <td>Sep</td>\n",
       "      <td>529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>1016.90</td>\n",
       "      <td>24</td>\n",
       "      <td>Oct</td>\n",
       "      <td>576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>1051.95</td>\n",
       "      <td>25</td>\n",
       "      <td>Nov</td>\n",
       "      <td>625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Close   t Month  t_square\n",
       "Date                                   \n",
       "2020-11-30   520.15   1   Nov         1\n",
       "2020-12-31   592.35   2   Dec         4\n",
       "2021-01-31   621.00   3   Jan         9\n",
       "2021-02-28   643.65   4   Feb        16\n",
       "2021-03-31   626.00   5   Mar        25\n",
       "2021-04-30   654.45   6   Apr        36\n",
       "2021-05-31   708.10   7   May        49\n",
       "2021-06-30   681.30   8   Jun        64\n",
       "2021-07-31   773.95   9   Jul        81\n",
       "2021-08-31   794.80  10   Aug       100\n",
       "2021-09-30   818.25  11   Sep       121\n",
       "2021-10-31   842.55  12   Oct       144\n",
       "2021-11-30   815.40  13   Nov       169\n",
       "2021-12-31   845.70  14   Dec       196\n",
       "2022-01-31   865.50  15   Jan       225\n",
       "2022-02-28   894.30  16   Feb       256\n",
       "2022-03-31   920.60  17   Mar       289\n",
       "2022-04-30   944.10  18   Apr       324\n",
       "2022-05-31   923.40  19   May       361\n",
       "2022-06-30   865.10  20   Jun       400\n",
       "2022-07-31   943.20  21   Jul       441\n",
       "2022-08-31   921.05  22   Aug       484\n",
       "2022-09-30   948.65  23   Sep       529\n",
       "2022-10-31  1016.90  24   Oct       576\n",
       "2022-11-30  1051.95  25   Nov       625"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "03e273e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>t</th>\n",
       "      <th>Month</th>\n",
       "      <th>t_square</th>\n",
       "      <th>log_close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>1</td>\n",
       "      <td>Nov</td>\n",
       "      <td>1</td>\n",
       "      <td>2.716129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>2</td>\n",
       "      <td>Dec</td>\n",
       "      <td>4</td>\n",
       "      <td>2.772578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>3</td>\n",
       "      <td>Jan</td>\n",
       "      <td>9</td>\n",
       "      <td>2.793092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>4</td>\n",
       "      <td>Feb</td>\n",
       "      <td>16</td>\n",
       "      <td>2.808650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>5</td>\n",
       "      <td>Mar</td>\n",
       "      <td>25</td>\n",
       "      <td>2.796574</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Close  t Month  t_square  log_close\n",
       "Date                                            \n",
       "2020-11-30  520.15  1   Nov         1   2.716129\n",
       "2020-12-31  592.35  2   Dec         4   2.772578\n",
       "2021-01-31  621.00  3   Jan         9   2.793092\n",
       "2021-02-28  643.65  4   Feb        16   2.808650\n",
       "2021-03-31  626.00  5   Mar        25   2.796574"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['log_close'] = np.log10(data['Close'])\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "75764acd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>t</th>\n",
       "      <th>Month</th>\n",
       "      <th>t_square</th>\n",
       "      <th>log_close</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>1</td>\n",
       "      <td>Nov</td>\n",
       "      <td>1</td>\n",
       "      <td>2.716129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>2</td>\n",
       "      <td>Dec</td>\n",
       "      <td>4</td>\n",
       "      <td>2.772578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>3</td>\n",
       "      <td>Jan</td>\n",
       "      <td>9</td>\n",
       "      <td>2.793092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>4</td>\n",
       "      <td>Feb</td>\n",
       "      <td>16</td>\n",
       "      <td>2.808650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>5</td>\n",
       "      <td>Mar</td>\n",
       "      <td>25</td>\n",
       "      <td>2.796574</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Close  t Month  t_square  log_close\n",
       "Date                                            \n",
       "2020-11-30  520.15  1   Nov         1   2.716129\n",
       "2020-12-31  592.35  2   Dec         4   2.772578\n",
       "2021-01-31  621.00  3   Jan         9   2.793092\n",
       "2021-02-28  643.65  4   Feb        16   2.808650\n",
       "2021-03-31  626.00  5   Mar        25   2.796574"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "84286824",
   "metadata": {},
   "outputs": [],
   "source": [
    "dummies = data[\"Month\"].str.get_dummies(\" \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f864a69f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Apr</th>\n",
       "      <th>Aug</th>\n",
       "      <th>Dec</th>\n",
       "      <th>Feb</th>\n",
       "      <th>Jan</th>\n",
       "      <th>Jul</th>\n",
       "      <th>Jun</th>\n",
       "      <th>Mar</th>\n",
       "      <th>May</th>\n",
       "      <th>Nov</th>\n",
       "      <th>Oct</th>\n",
       "      <th>Sep</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-04-30</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-05-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-07-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-31</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Apr  Aug  Dec  Feb  Jan  Jul  Jun  Mar  May  Nov  Oct  Sep\n",
       "Date                                                                  \n",
       "2020-11-30    0    0    0    0    0    0    0    0    0    1    0    0\n",
       "2020-12-31    0    0    1    0    0    0    0    0    0    0    0    0\n",
       "2021-01-31    0    0    0    0    1    0    0    0    0    0    0    0\n",
       "2021-02-28    0    0    0    1    0    0    0    0    0    0    0    0\n",
       "2021-03-31    0    0    0    0    0    0    0    1    0    0    0    0\n",
       "2021-04-30    1    0    0    0    0    0    0    0    0    0    0    0\n",
       "2021-05-31    0    0    0    0    0    0    0    0    1    0    0    0\n",
       "2021-06-30    0    0    0    0    0    0    1    0    0    0    0    0\n",
       "2021-07-31    0    0    0    0    0    1    0    0    0    0    0    0\n",
       "2021-08-31    0    1    0    0    0    0    0    0    0    0    0    0\n",
       "2021-09-30    0    0    0    0    0    0    0    0    0    0    0    1\n",
       "2021-10-31    0    0    0    0    0    0    0    0    0    0    1    0\n",
       "2021-11-30    0    0    0    0    0    0    0    0    0    1    0    0\n",
       "2021-12-31    0    0    1    0    0    0    0    0    0    0    0    0\n",
       "2022-01-31    0    0    0    0    1    0    0    0    0    0    0    0\n",
       "2022-02-28    0    0    0    1    0    0    0    0    0    0    0    0\n",
       "2022-03-31    0    0    0    0    0    0    0    1    0    0    0    0\n",
       "2022-04-30    1    0    0    0    0    0    0    0    0    0    0    0\n",
       "2022-05-31    0    0    0    0    0    0    0    0    1    0    0    0\n",
       "2022-06-30    0    0    0    0    0    0    1    0    0    0    0    0\n",
       "2022-07-31    0    0    0    0    0    1    0    0    0    0    0    0\n",
       "2022-08-31    0    1    0    0    0    0    0    0    0    0    0    0\n",
       "2022-09-30    0    0    0    0    0    0    0    0    0    0    0    1\n",
       "2022-10-31    0    0    0    0    0    0    0    0    0    0    1    0\n",
       "2022-11-30    0    0    0    0    0    0    0    0    0    1    0    0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "51a771ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "data =pd.concat([data, dummies], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b7279983",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>t</th>\n",
       "      <th>Month</th>\n",
       "      <th>t_square</th>\n",
       "      <th>log_close</th>\n",
       "      <th>Apr</th>\n",
       "      <th>Aug</th>\n",
       "      <th>Dec</th>\n",
       "      <th>Feb</th>\n",
       "      <th>Jan</th>\n",
       "      <th>Jul</th>\n",
       "      <th>Jun</th>\n",
       "      <th>Mar</th>\n",
       "      <th>May</th>\n",
       "      <th>Nov</th>\n",
       "      <th>Oct</th>\n",
       "      <th>Sep</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-11-30</th>\n",
       "      <td>520.15</td>\n",
       "      <td>1</td>\n",
       "      <td>Nov</td>\n",
       "      <td>1</td>\n",
       "      <td>2.716129</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-12-31</th>\n",
       "      <td>592.35</td>\n",
       "      <td>2</td>\n",
       "      <td>Dec</td>\n",
       "      <td>4</td>\n",
       "      <td>2.772578</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-31</th>\n",
       "      <td>621.00</td>\n",
       "      <td>3</td>\n",
       "      <td>Jan</td>\n",
       "      <td>9</td>\n",
       "      <td>2.793092</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-02-28</th>\n",
       "      <td>643.65</td>\n",
       "      <td>4</td>\n",
       "      <td>Feb</td>\n",
       "      <td>16</td>\n",
       "      <td>2.808650</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-03-31</th>\n",
       "      <td>626.00</td>\n",
       "      <td>5</td>\n",
       "      <td>Mar</td>\n",
       "      <td>25</td>\n",
       "      <td>2.796574</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-04-30</th>\n",
       "      <td>654.45</td>\n",
       "      <td>6</td>\n",
       "      <td>Apr</td>\n",
       "      <td>36</td>\n",
       "      <td>2.815876</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-05-31</th>\n",
       "      <td>708.10</td>\n",
       "      <td>7</td>\n",
       "      <td>May</td>\n",
       "      <td>49</td>\n",
       "      <td>2.850095</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-06-30</th>\n",
       "      <td>681.30</td>\n",
       "      <td>8</td>\n",
       "      <td>Jun</td>\n",
       "      <td>64</td>\n",
       "      <td>2.833338</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-07-31</th>\n",
       "      <td>773.95</td>\n",
       "      <td>9</td>\n",
       "      <td>Jul</td>\n",
       "      <td>81</td>\n",
       "      <td>2.888713</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-31</th>\n",
       "      <td>794.80</td>\n",
       "      <td>10</td>\n",
       "      <td>Aug</td>\n",
       "      <td>100</td>\n",
       "      <td>2.900258</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>818.25</td>\n",
       "      <td>11</td>\n",
       "      <td>Sep</td>\n",
       "      <td>121</td>\n",
       "      <td>2.912886</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-31</th>\n",
       "      <td>842.55</td>\n",
       "      <td>12</td>\n",
       "      <td>Oct</td>\n",
       "      <td>144</td>\n",
       "      <td>2.925596</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-30</th>\n",
       "      <td>815.40</td>\n",
       "      <td>13</td>\n",
       "      <td>Nov</td>\n",
       "      <td>169</td>\n",
       "      <td>2.911371</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-31</th>\n",
       "      <td>845.70</td>\n",
       "      <td>14</td>\n",
       "      <td>Dec</td>\n",
       "      <td>196</td>\n",
       "      <td>2.927216</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-01-31</th>\n",
       "      <td>865.50</td>\n",
       "      <td>15</td>\n",
       "      <td>Jan</td>\n",
       "      <td>225</td>\n",
       "      <td>2.937267</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-28</th>\n",
       "      <td>894.30</td>\n",
       "      <td>16</td>\n",
       "      <td>Feb</td>\n",
       "      <td>256</td>\n",
       "      <td>2.951483</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03-31</th>\n",
       "      <td>920.60</td>\n",
       "      <td>17</td>\n",
       "      <td>Mar</td>\n",
       "      <td>289</td>\n",
       "      <td>2.964071</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04-30</th>\n",
       "      <td>944.10</td>\n",
       "      <td>18</td>\n",
       "      <td>Apr</td>\n",
       "      <td>324</td>\n",
       "      <td>2.975018</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-31</th>\n",
       "      <td>923.40</td>\n",
       "      <td>19</td>\n",
       "      <td>May</td>\n",
       "      <td>361</td>\n",
       "      <td>2.965390</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-30</th>\n",
       "      <td>865.10</td>\n",
       "      <td>20</td>\n",
       "      <td>Jun</td>\n",
       "      <td>400</td>\n",
       "      <td>2.937066</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-31</th>\n",
       "      <td>943.20</td>\n",
       "      <td>21</td>\n",
       "      <td>Jul</td>\n",
       "      <td>441</td>\n",
       "      <td>2.974604</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-31</th>\n",
       "      <td>921.05</td>\n",
       "      <td>22</td>\n",
       "      <td>Aug</td>\n",
       "      <td>484</td>\n",
       "      <td>2.964283</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09-30</th>\n",
       "      <td>948.65</td>\n",
       "      <td>23</td>\n",
       "      <td>Sep</td>\n",
       "      <td>529</td>\n",
       "      <td>2.977106</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-31</th>\n",
       "      <td>1016.90</td>\n",
       "      <td>24</td>\n",
       "      <td>Oct</td>\n",
       "      <td>576</td>\n",
       "      <td>3.007278</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11-30</th>\n",
       "      <td>1051.95</td>\n",
       "      <td>25</td>\n",
       "      <td>Nov</td>\n",
       "      <td>625</td>\n",
       "      <td>3.021995</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Close   t Month  t_square  log_close  Apr  Aug  Dec  Feb  Jan  \\\n",
       "Date                                                                          \n",
       "2020-11-30   520.15   1   Nov         1   2.716129    0    0    0    0    0   \n",
       "2020-12-31   592.35   2   Dec         4   2.772578    0    0    1    0    0   \n",
       "2021-01-31   621.00   3   Jan         9   2.793092    0    0    0    0    1   \n",
       "2021-02-28   643.65   4   Feb        16   2.808650    0    0    0    1    0   \n",
       "2021-03-31   626.00   5   Mar        25   2.796574    0    0    0    0    0   \n",
       "2021-04-30   654.45   6   Apr        36   2.815876    1    0    0    0    0   \n",
       "2021-05-31   708.10   7   May        49   2.850095    0    0    0    0    0   \n",
       "2021-06-30   681.30   8   Jun        64   2.833338    0    0    0    0    0   \n",
       "2021-07-31   773.95   9   Jul        81   2.888713    0    0    0    0    0   \n",
       "2021-08-31   794.80  10   Aug       100   2.900258    0    1    0    0    0   \n",
       "2021-09-30   818.25  11   Sep       121   2.912886    0    0    0    0    0   \n",
       "2021-10-31   842.55  12   Oct       144   2.925596    0    0    0    0    0   \n",
       "2021-11-30   815.40  13   Nov       169   2.911371    0    0    0    0    0   \n",
       "2021-12-31   845.70  14   Dec       196   2.927216    0    0    1    0    0   \n",
       "2022-01-31   865.50  15   Jan       225   2.937267    0    0    0    0    1   \n",
       "2022-02-28   894.30  16   Feb       256   2.951483    0    0    0    1    0   \n",
       "2022-03-31   920.60  17   Mar       289   2.964071    0    0    0    0    0   \n",
       "2022-04-30   944.10  18   Apr       324   2.975018    1    0    0    0    0   \n",
       "2022-05-31   923.40  19   May       361   2.965390    0    0    0    0    0   \n",
       "2022-06-30   865.10  20   Jun       400   2.937066    0    0    0    0    0   \n",
       "2022-07-31   943.20  21   Jul       441   2.974604    0    0    0    0    0   \n",
       "2022-08-31   921.05  22   Aug       484   2.964283    0    1    0    0    0   \n",
       "2022-09-30   948.65  23   Sep       529   2.977106    0    0    0    0    0   \n",
       "2022-10-31  1016.90  24   Oct       576   3.007278    0    0    0    0    0   \n",
       "2022-11-30  1051.95  25   Nov       625   3.021995    0    0    0    0    0   \n",
       "\n",
       "            Jul  Jun  Mar  May  Nov  Oct  Sep  \n",
       "Date                                           \n",
       "2020-11-30    0    0    0    0    1    0    0  \n",
       "2020-12-31    0    0    0    0    0    0    0  \n",
       "2021-01-31    0    0    0    0    0    0    0  \n",
       "2021-02-28    0    0    0    0    0    0    0  \n",
       "2021-03-31    0    0    1    0    0    0    0  \n",
       "2021-04-30    0    0    0    0    0    0    0  \n",
       "2021-05-31    0    0    0    1    0    0    0  \n",
       "2021-06-30    0    1    0    0    0    0    0  \n",
       "2021-07-31    1    0    0    0    0    0    0  \n",
       "2021-08-31    0    0    0    0    0    0    0  \n",
       "2021-09-30    0    0    0    0    0    0    1  \n",
       "2021-10-31    0    0    0    0    0    1    0  \n",
       "2021-11-30    0    0    0    0    1    0    0  \n",
       "2021-12-31    0    0    0    0    0    0    0  \n",
       "2022-01-31    0    0    0    0    0    0    0  \n",
       "2022-02-28    0    0    0    0    0    0    0  \n",
       "2022-03-31    0    0    1    0    0    0    0  \n",
       "2022-04-30    0    0    0    0    0    0    0  \n",
       "2022-05-31    0    0    0    1    0    0    0  \n",
       "2022-06-30    0    1    0    0    0    0    0  \n",
       "2022-07-31    1    0    0    0    0    0    0  \n",
       "2022-08-31    0    0    0    0    0    0    0  \n",
       "2022-09-30    0    0    0    0    0    0    1  \n",
       "2022-10-31    0    0    0    0    0    1    0  \n",
       "2022-11-30    0    0    0    0    1    0    0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4635e878",
   "metadata": {},
   "source": [
    "## model based forecasting"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08e392ff",
   "metadata": {},
   "source": [
    "#### linear model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "374ffc79",
   "metadata": {},
   "outputs": [],
   "source": [
    "train = data.head(20)\n",
    "test = data.tail(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e7fcea08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.065829055485507"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statsmodels.formula.api as smf \n",
    "from sklearn.metrics import mean_absolute_percentage_error\n",
    "\n",
    "linear_model = smf.ols('Close~t',data=train).fit()\n",
    "linear_pred=linear_model.predict(test['t'])\n",
    "\n",
    "linear_rms=mean_absolute_percentage_error(test['Close'],linear_pred)*100\n",
    "linear_rms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ef995a5",
   "metadata": {},
   "source": [
    "#### exponential model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a00e7f34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99.68893167007964"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Exp = smf.ols('log_close~t',data=train).fit()\n",
    "pred_Exp = pd.Series(Exp.predict(pd.DataFrame(test['t'])))\n",
    "rmse_Exp = mean_absolute_percentage_error(test['Close'],pred_Exp)*100\n",
    "rmse_Exp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcb6327f",
   "metadata": {},
   "source": [
    "#### quadratic model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "04537ede",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.521084304200823"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Quad = smf.ols('Close~t+t_square',data=train).fit()\n",
    "pred_Quad = pd.Series(Quad.predict(test[[\"t\",\"t_square\"]]))\n",
    "rmse_Quad = mean_absolute_percentage_error(test['Close'],pred_Quad)*100\n",
    "rmse_Quad"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56802a3f",
   "metadata": {},
   "source": [
    "#### additive seasonality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "679b52d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19.81255620306229"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_sea = smf.ols('Close~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov',data=train).fit()\n",
    "pred_add_sea = pd.Series(add_sea.predict(test[['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov']]))\n",
    "rmse_add_sea = mean_absolute_percentage_error(test['Close'],pred_add_sea)*100\n",
    "rmse_add_sea"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24a841b1",
   "metadata": {},
   "source": [
    "#### additive seasonality quadratic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "62202580",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.27585518798767"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_sea_Quad = smf.ols('Close~t+t_square+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov',data=train).fit()\n",
    "pred_add_sea_quad = pd.Series(add_sea_Quad.predict(test[['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','t','t_square']]))\n",
    "rmse_add_sea_quad = mean_absolute_percentage_error(test['Close'],pred_add_sea_quad)*100\n",
    "rmse_add_sea_quad"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f52f97a6",
   "metadata": {},
   "source": [
    "#### multiplicative seasonality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7205e1f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99.70332277517574"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Mul_sea = smf.ols('log_close~Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov',data = train).fit()\n",
    "pred_Mult_sea = pd.Series(Mul_sea.predict(test))\n",
    "rmse_Mult_sea = mean_absolute_percentage_error(test['Close'],pred_Mult_sea)*100\n",
    "rmse_Mult_sea"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "260c5813",
   "metadata": {},
   "source": [
    "#### multiplicative additive seasonality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3c9c821f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99.68673936449606"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Mul_Add_sea = smf.ols('log_close~t+Jan+Feb+Mar+Apr+May+Jun+Jul+Aug+Sep+Oct+Nov',data = train).fit()\n",
    "pred_Mult_add_sea = pd.Series(Mul_Add_sea.predict(test))\n",
    "rmse_Mult_add_sea = mean_absolute_percentage_error(test['Close'],pred_Mult_add_sea)*100\n",
    "rmse_Mult_add_sea"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ac63761",
   "metadata": {},
   "source": [
    "## data driven forecasting"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ca8f768",
   "metadata": {},
   "source": [
    "#### moving average"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "30afeb2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x15459ad0970>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,4))\n",
    "data['Close'].plot(label=\"org\")\n",
    "for i in range(2,43,6):\n",
    "    data['Close'].rolling(i).mean().plot(label=str(i))\n",
    "plt.legend(loc='best')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23ac9e01",
   "metadata": {},
   "source": [
    "#### simple exponential smoothing model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "6940c52f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12.25252643407676"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# forcast -  based on current time\n",
    "from statsmodels.tsa.holtwinters import SimpleExpSmoothing\n",
    "\n",
    "ses_model = SimpleExpSmoothing(train[\"Close\"]).fit(smoothing_level=0.2)\n",
    "pred_ses = ses_model.predict(start = test.index[0],end = test.index[-1])\n",
    "\n",
    "ses_rms=mean_absolute_percentage_error(pred_ses,test['Close'])*100 \n",
    "ses_rms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de318a40",
   "metadata": {},
   "source": [
    "#### holt model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d8d4cc57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9.792125430895753"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# forcast - based on current time, trend\n",
    "from statsmodels.tsa.holtwinters import Holt\n",
    "\n",
    "hw_model = Holt(train[\"Close\"]).fit(smoothing_level=0.8, smoothing_slope=0.2) # two levels of smoothening\n",
    "pred_hw = hw_model.predict(start = test.index[0],end = test.index[-1])\n",
    "hw_rms=mean_absolute_percentage_error(pred_hw,test['Close'])*100 \n",
    "hw_rms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7722e63c",
   "metadata": {},
   "source": [
    "#### Holts winter exponential smoothing with multiplicative seasonality and additive trend¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8df31b26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.6501016421463275"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# forcast - based on current time, trend, seasonality\n",
    "from statsmodels.tsa.holtwinters import ExponentialSmoothing  # three levels of smoothening\n",
    "\n",
    "hwe_model_mul_add = ExponentialSmoothing(train[\"Close\"],seasonal=\"mul\",trend=\"add\",seasonal_periods=6).fit() \n",
    "pred_hwe_mul_add = hwe_model_mul_add.predict(start = test.index[0],end = test.index[-1])\n",
    "\n",
    "hw_ma_rms=mean_absolute_percentage_error(pred_hwe_mul_add,test['Close'])*100 \n",
    "hw_ma_rms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce96ae02",
   "metadata": {},
   "source": [
    "#### Holts winter exponential smoothing with additive seasonality and additive trend¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8867812e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.185241358703149"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hwe_model_add_add = ExponentialSmoothing(train[\"Close\"],seasonal=\"add\",trend=\"add\",seasonal_periods=2).fit() #add the trend to the model\n",
    "pred_hwe_add_add = hwe_model_add_add.predict(start = test.index[0],end = test.index[-1])\n",
    "\n",
    "hw_aa_rms=mean_absolute_percentage_error(pred_hwe_add_add,test['Close'])*100 \n",
    "hw_aa_rms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d62c4a00",
   "metadata": {},
   "source": [
    "##### the least error was from the model - *Holts winter exponential smoothing with additive seasonality and additive trend*"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
